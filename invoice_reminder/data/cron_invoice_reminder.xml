<odoo>
    <data noupdate="1">
        <!-- Cron Job for Invoice Reminder -->
        <record id="cron_invoice_reminder" model="ir.cron">
            <field name="name">Invoice Reminder</field>
            <field name="model_id" ref="account.model_account_move"/>
            <field name="state">code</field>
            <field name="code">
              <![CDATA[
#Calculates 7 days ago and sets it as a date
seven_days_ago = (fields.Datetime.now() - timedelta(days=7)).date()
# Filter for Invoices (not bills) that have a due date past and are partially paid or not paid
pending_invoices = env["account.move"].search(["&", "&", ("move_type", "=", "out_invoice"), ("payment_state", "in", ["partial", "not_paid"]), ("invoice_date_due", "<", Today)])

# Search for the email template by its external ID
template = env.ref('invoice_reminder.invoice_reminder_email_template', raise_if_not_found=False)
if template:
    for pending_invoice in pending_invoices:
        template.send_mail(pending_invoice.id, force_send=False, raise_exception=False)
              ]]>
            </field>
            <field name="active" eval="True"/>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
        </record>
    </data>
</odoo>

